export const strings = {
  general: {
    appName: "Turnaround",
    welcome: "Welcome to Turnaround",
    loading: "Loading...",
    error: "An error occurred",
    success: "Operation successful",
    cancel: "Cancel",
    save: "Save",
    edit: "Edit",
    delete: "Delete",
    view: "View",
    print: "Print",
    export: "Export",
    import: "Import",
    search: "Search",
    filter: "Filter",
    sort: "Sort",
    refresh: "Refresh",
    back: "Back",
    next: "Next",
    previous: "Previous",
    confirm: "Confirm",
    reject: "Reject",
    approve: "Approve",
    close: "Close",
    apply: "Apply",
    reset: "Reset",
    yes: "Yes",
    no: "No",
  },

  auth: {
    login: "Login",
    logout: "Logout",
    signUp: "Sign Up",
    forgotPassword: "Forgot Password",
    resetPassword: "Reset Password",
    changePassword: "Change Password",
    twoFactorAuth: "Two-Factor Authentication",
    rememberMe: "Remember Me",
    loginWithGoogle: "Login with Google",
    loginWithMicrosoft: "Login with Microsoft",
    loginWithFacebook: "Login with Facebook",
    loginWithApple: "Login with Apple",
    verifyEmail: "Verify Email",
    resendVerificationEmail: "Resend Verification Email",
  },

  navigation: {
    dashboard: "Dashboard",
    reports: "Reports",
    settings: "Settings",
    profile: "Profile",
    help: "Help",
    about: "About",
    notifications: "Notifications",
    messages: "Messages",
    logout: "Logout",
  },

  dashboard: {
    overview: "Overview",
    recentActivity: "Recent Activity",
    quickActions: "Quick Actions",
    keyMetrics: "Key Metrics",
    notifications: "Notifications",
    tasks: "Tasks",
    calendar: "Calendar",
    analytics: "Analytics",
  },

  crm: {
    customers: "Customers",
    leads: "Leads",
    opportunities: "Opportunities",
    contacts: "Contacts",
    accounts: "Accounts",
    activities: "Activities",
    campaigns: "Campaigns",
    customerService: "Customer Service",
    customerFeedback: "Customer Feedback",
    loyaltyProgram: "Loyalty Program",
    segmentation: "Customer Segmentation",
    relationshipManagement: "Customer Relationship Management",
  },

  sales: {
    orders: "Orders",
    quotes: "Quotes",
    invoices: "Invoices",
    payments: "Payments",
    products: "Products",
    priceLists: "Price Lists",
    discounts: "Discounts",
    salesTeam: "Sales Team",
    commissions: "Commissions",
    forecasts: "Forecasts",
    territories: "Sales Territories",
    pipeline: "Sales Pipeline",
    returns: "Returns and Refunds",
  },

  inventory: {
    items: "Items",
    stockLevels: "Stock Levels",
    warehouses: "Warehouses",
    transfers: "Transfers",
    adjustments: "Adjustments",
    reorderPoints: "Reorder Points",
    barcodes: "Barcodes",
    batches: "Batches",
    serialNumbers: "Serial Numbers",
    inventoryValuation: "Inventory Valuation",
    cycleCounts: "Cycle Counts",
    kitting: "Kitting and Bundling",
  },

  purchasing: {
    purchaseOrders: "Purchase Orders",
    vendors: "Vendors",
    receivingGoods: "Receiving Goods",
    supplierInvoices: "Supplier Invoices",
    supplierPayments: "Supplier Payments",
    rfq: "Request for Quotation",
    contractManagement: "Contract Management",
    supplierPerformance: "Supplier Performance",
    returns: "Purchase Returns",
    supplierRelationshipManagement: "Supplier Relationship Management",
  },

  manufacturing: {
    productionOrders: "Production Orders",
    billOfMaterials: "Bill of Materials",
    workOrders: "Work Orders",
    routings: "Routings",
    qualityControl: "Quality Control",
    maintenance: "Maintenance",
    capacityPlanning: "Capacity Planning",
    mrp: "Material Requirements Planning",
    costingAndPricing: "Costing and Pricing",
    productLifecycle: "Product Lifecycle Management",
  },

  hr: {
    employees: "Employees",
    departments: "Departments",
    positions: "Positions",
    payroll: "Payroll",
    timeTracking: "Time Tracking",
    leave: "Leave Management",
    performance: "Performance Management",
    recruitment: "Recruitment",
    training: "Training",
    expenses: "Expenses",
    benefits: "Employee Benefits",
    onboarding: "Onboarding",
    offboarding: "Offboarding",
    attendance: "Attendance",
  },

  finance: {
    generalLedger: "General Ledger",
    accountsReceivable: "Accounts Receivable",
    accountsPayable: "Accounts Payable",
    bankAccounts: "Bank Accounts",
    cashManagement: "Cash Management",
    budgeting: "Budgeting",
    assetManagement: "Asset Management",
    taxation: "Taxation",
    financialReporting: "Financial Reporting",
    costAccounting: "Cost Accounting",
    auditTrail: "Audit Trail",
    riskManagement: "Risk Management",
    compliance: "Compliance",
  },

  projectManagement: {
    projects: "Projects",
    tasks: "Tasks",
    timeSheets: "Time Sheets",
    resources: "Resources",
    ganttChart: "Gantt Chart",
    milestones: "Milestones",
    budgets: "Project Budgets",
    risks: "Risk Management",
    documents: "Project Documents",
    collaboration: "Team Collaboration",
  },

  support: {
    ticketManagement: "Ticket Management",
    knowledgeBase: "Knowledge Base",
    faq: "FAQ",
    livechat: "Live Chat",
    feedback: "Customer Feedback",
    escalations: "Escalations",
  },

  analytics: {
    reports: "Reports",
    dashboards: "Dashboards",
    dataVisualization: "Data Visualization",
    businessIntelligence: "Business Intelligence",
    predictiveAnalytics: "Predictive Analytics",
    kpis: "Key Performance Indicators",
  },

  settings: {
    generalSettings: "General Settings",
    userManagement: "User Management",
    rolePermissions: "Role and Permissions",
    companyProfile: "Company Profile",
    integrations: "Integrations",
    customization: "Customization",
    dataBackup: "Data Backup and Recovery",
    systemLogs: "System Logs",
    businessSettings: "Business Settings",
  },

  callToAction: {
    getStarted: "Get Started",
    learnMore: "Learn More",
    tryForFree: "Try for Free",
    requestDemo: "Request a Demo",
    contactSales: "Contact Sales",
    signUpNow: "Sign Up Now",
    upgradeAccount: "Upgrade Your Account",
    scheduleConsultation: "Schedule a Consultation",
    downloadWhitepaper: "Download Whitepaper",
    joinWebinar: "Join Our Webinar",
  },

  userProfile: {
    personalInfo: "Personal Information",
    accountSettings: "Account Settings",
    preferences: "Preferences",
    securitySettings: "Security Settings",
    activityLog: "Activity Log",
    linkedAccounts: "Linked Accounts",
    notificationSettings: "Notification Settings",
    privacySettings: "Privacy Settings",
  },

  toastMessages: {
    success: {
      create: {
        blunt: "{{item}} created",
        succinct: "{{item}} created successfully",
        verbose: "Success! {{item}} created!",
      },
      update: {
        blunt: "{{item}} updated",
        succinct: "{{item}} updated successfully",
        verbose: "Success! {{item}} updated!",
      },
      delete: {
        blunt: "{{item}} deleted",
        succinct: "{{item}} deleted successfully",
        verbose: "Success! {{item}} deleted!",
      },
      save: "Success! {{item}} saved!",
      upload: "Success! {{item}} uploaded!",
      download: "Success! {{item}} downloaded!",
      import: "Success! {{item}} imported!",
      export: "Success! {{item}} exported!",
      statusChanged: "Status successfully changed to {{newStatus}}",
      approved: "{{item}} has been approved",
      rejected: "{{item}} has been rejected",
      archived: "{{item}} has been archived",
      unarchived: "{{item}} has been unarchived",
      processed: "{{item}} has been processed successfully",
    },
    error: {
      create: {
        blunt: "{{item}} creation failed",
        succinct: "Failed to create {{item}}",
        verbose: "Error! Failed to create {{item}}.",
      },
      update: {
        blunt: "{{item}} update failed",
        succinct: "Failed to update {{item}}",
        verbose: "Error! Failed to update {{item}}.",
      },
      delete: {
        blunt: "{{item}} deletion failed",
        succinct: "Failed to delete {{item}}",
        verbose: "Error! Failed to delete {{item}}.",
      },
      save: "Error! Failed to save {{item}}.",
      upload: "Error! Failed to upload {{item}}.",
      download: "Error! Failed to download {{item}}.",
      import: "Error! Failed to import {{item}}.",
      export: "Error! Failed to export {{item}}.",
      statusChangeFailed: "Failed to change status to {{newStatus}}",
      approvalFailed: "Failed to approve {{item}}",
      rejectionFailed: "Failed to reject {{item}}",
      archiveFailed: "Failed to archive {{item}}",
      unarchiveFailed: "Failed to unarchive {{item}}",
      processingFailed: "Failed to process {{item}}",
    },
    info: {
      processing: {
        blunt: "Processing {{item}}",
        succinct: "Processing {{item}}. Please wait",
        verbose: "Processing {{item}}. This may take a moment...",
      },
      loading: "Loading {{item}}...",
      syncing: "Syncing {{item}}. This may take a moment...",
      awaitingApproval: "{{item}} is awaiting approval",
      inReview: "{{item}} is under review",
      paymentPending: "Payment is pending for {{item}}",
      fulfillmentInProgress: "Fulfillment is in progress for {{item}}",
      preparingDelivery: "Preparing {{item}} for delivery",
      processingReturn: "Processing return for {{item}}",
      processingRefund: "Processing refund for {{item}}",
      verificationRequired: "Verification required for {{item}}",
    },
    warning: {
      unsavedChanges: {
        blunt: "Unsaved changes",
        succinct: "Unsaved changes to {{item}}",
        verbose: "Warning! You have unsaved changes to {{item}}.",
      },
      limitReached: "Warning! You've reached the limit for {{item}}.",
      expiringSoon: "Warning! {{item}} is expiring soon.",
      approachingArchive: "{{item}} will be archived soon",
      processingTimeout: "Processing {{item}} is taking longer than expected",
    },
  },

  errors: {
    notFound: {
      blunt: "{{item}} not found",
      succinct: "Unable to locate {{item}}",
      verbose: "The requested {{item}} could not be found in the system.",
    },
    unauthorized: {
      blunt: "Unauthorized",
      succinct: "Access denied",
      verbose: "You are not authorized to perform this action.",
    },
    forbidden: "Access forbidden",
    serverError: "An unexpected server error occurred",
    networkError: "Network error. Please check your connection",
    validationError: "Please check your input and try again",
    duplicateEntry: "{{item}} already exists",
    insufficientPermissions: "You don't have sufficient permissions for this action",
    itemNotFound: "{{item}} not found",
    statusChangeNotAllowed: "Cannot change status from {{currentStatus}} to {{newStatus}}",
    pendingApproval: "This action requires approval",
    pendingPayment: "Payment is required to proceed",
    pendingFulfillment: "Item cannot be processed until fulfillment is complete",
    pendingDelivery: "Item is awaiting delivery",
    pendingReturn: "Return process is not complete",
    pendingRefund: "Refund is being processed",
    pendingVerification: "Verification is required before proceeding",
    alreadyArchived: "This item is already archived",
    cannotProcessArchived: "Cannot process an archived item",
  },

  confirmations: {
    deleteItem: {
      blunt: "Delete {{item}}",
      succinct: "Confirm deletion of {{item}}",
      verbose: "Are you sure you want to delete this {{item}}?",
    },
    discardChanges: {
      blunt: "Discard changes",
      succinct: "Unsaved changes will be lost",
      verbose: "Are you sure you want to discard your changes?",
    },
    logout: {
      blunt: "Log out",
      succinct: "Confirm logout",
      verbose: "You will be logged out. Do you want to continue?",
    },
    cancelSubscription: {
      blunt: "Cancel subscription",
      succinct: "Subscription will be cancelled",
      verbose: "Are you sure you want to cancel your subscription?",
    },
    changeStatus: {
      blunt: "Change status",
      succinct: "Status will change: {{currentStatus}} → {{newStatus}}",
      verbose: "Are you sure you want to change the status from {{currentStatus}} to {{newStatus}}?",
    },
    approve: {
      blunt: "Approve {{item}}",
      succinct: "Confirm approval of {{item}}",
      verbose: "Are you sure you want to approve this {{item}}?",
    },
    reject: {
      blunt: "Reject {{item}}",
      succinct: "Confirm rejection of {{item}}",
      verbose: "Are you sure you want to reject this {{item}}?",
    },
    archive: {
      blunt: "Archive {{item}}",
      succinct: "{{item}} will be archived",
      verbose: "Are you sure you want to archive this {{item}}?",
    },
    unarchive: {
      blunt: "Unarchive {{item}}",
      succinct: "{{item}} will be unarchived",
      verbose: "Are you sure you want to unarchive this {{item}}?",
    },
    cancelProcessing: {
      blunt: "Stop processing",
      succinct: "Cancel processing of {{item}}",
      verbose: "Are you sure you want to cancel processing of this {{item}}?",
    },
  },

  placeholders: {
    search: {
      blunt: "Search",
      succinct: "Search {{item}}",
      verbose: "Search for {{item}}...",
    },
    selectOption: {
      blunt: "Select",
      succinct: "Select {{item}}",
      verbose: "Please select a {{item}}",
    },
    enterName: "Enter {{item}} name",
    enterEmail: "Enter email address",
    enterPassword: "Enter password",
    enterDescription: "Enter description",
    selectStatus: "Select status",
    enterApprovalReason: "Enter approval reason",
    enterRejectionReason: "Enter rejection reason",
  },

  labels: {
    name: "Name",
    firstName: "First Name",
    lastName: "Last Name",
    email: "Email",
    phone: "Phone",
    address: "Address",
    city: "City",
    country: "Country",
    postalCode: "Postal Code",
    dateCreated: "Date Created",
    lastModified: "Last Modified",
    status: "Status",
    actions: "Actions",
    approvedBy: "Approved By",
    rejectedBy: "Rejected By",
    approvalDate: "Approval Date",
    rejectionDate: "Rejection Date",
    archiveDate: "Archive Date",
    processingDate: "Processing Date",
    completionDate: "Completion Date",
  },

  statuses: {
    active: "Active",
    inactive: "Inactive",
    pending: "Pending",
    completed: "Completed",
    cancelled: "Cancelled",
    onHold: "On Hold",
    inProgress: "In Progress",
    scheduled: "Scheduled",
    draft: "Draft",
    published: "Published",
    approved: "Approved",
    rejected: "Rejected",
    pendingApproval: "Pending Approval",
    pendingReview: "Pending Review",
    pendingPayment: "Pending Payment",
    pendingFulfillment: "Pending Fulfillment",
    pendingDelivery: "Pending Delivery",
    pendingReturn: "Pending Return",
    pendingRefund: "Pending Refund",
    pendingVerification: "Pending Verification",
    archived: "Archived",
    processing: "Processing",
    processed: "Processed",
  },

  timeRelated: {
    today: "Today",
    yesterday: "Yesterday",
    tomorrow: "Tomorrow",
    thisWeek: "This Week",
    lastWeek: "Last Week",
    thisMonth: "This Month",
    lastMonth: "Last Month",
    thisYear: "This Year",
    lastYear: "Last Year",
    custom: "Custom Range",
  },

  pagination: {
    previous: "Previous",
    next: "Next",
    page: "Page {{page}} of {{totalPages}}",
    itemsPerPage: "Items per page",
    showing: "Showing {{start}} to {{end}} of {{total}} entries",
  },

  fileUpload: {
    dragAndDrop: "Drag and drop files here",
    or: "or",
    browseFiles: "Browse Files",
    maxFileSize: "Maximum file size: {{size}}MB",
    allowedFileTypes: "Allowed file types: {{types}}",
  },

  emptyStates: {
    noResults: {
      blunt: "No results",
      succinct: "No results found",
      verbose: "No results match your search criteria.",
    },
    noData: {
      blunt: "No data",
      succinct: "No data available",
      verbose: "There is no data available to display.",
    },
    noItems: {
      blunt: "No {{items}}",
      succinct: "No {{items}} found",
      verbose: "There are no {{items}} to display.",
    },
    startCreating: "Start creating {{items}}",
  },
} as const;

type MessageType = 'success' | 'error' | 'info' | 'warning';
type MessageAction = keyof (typeof strings.toastMessages)[MessageType];

export const formatMessage = (
  message: string,
  variables: Record<string, string>
): string => {
  return message.replace(/\{\{(\w+)\}\}/g, (_, key) => variables[key] || `{{${key}}}`);
};

export const getToastMessage = (
  type: MessageType,
  action: MessageAction,
  variables: Record<string, string>
): string => {
  const message = strings.toastMessages[type][action];
  return formatMessage(message, variables);
};

// Usage examples:
// const successMessage = getToastMessage('success', 'create', { item: 'Work Order' });
// const errorMessage = getToastMessage('error', 'update', { item: 'Purchase Order' });
// const infoMessage = getToastMessage('info', 'processing', { item: 'Sales Order' });
// const warningMessage = getToastMessage('warning', 'expiringSoon', { item: 'Invoice' });